<?php

/**
 * @file
 * Hook implementations for the os_rest module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\media\MediaInterface;

/**
 * Implements hook_rest_resource_alter().
 */
function os_rest_rest_resource_alter(&$resources) {
  $resources['entity:media']['class'] = 'Drupal\os_rest\Plugin\rest\resource\OsMediaResource';
  $resources['entity:group']['class'] = 'Drupal\os_rest\Plugin\rest\resource\OsGroupResource';

  $types = [
    'entity:media',
    'entity:group',
    'entity:node',
    'entity:user',
  ];
  foreach ($types as $t) {
    if (isset($resources[$t])) {
      $resources[$t]['uri_paths']['canonical'] = '/api' . $resources[$t]['uri_paths']['canonical'];
      $resources[$t]['uri_paths']['create'] = str_replace('entity', 'api', $resources[$t]['uri_paths']['create']);
    }
  }

  if (isset($resources['entity:file'])) {
    $resources['entity:file']['uri_paths']['canonical'] = '/api/file/{file}';
    $resources['entity:file']['uri_paths']['create'] = '/api/file';
  }

  if (isset($resources['entity:taxonomy_term'])) {
    $resources['entity:taxonomy_term']['uri_paths']['canonical'] = '/api/taxonomy/{taxonomy_term}';
    $resources['entity:taxonomy_term']['uri_paths']['create'] = '/api/taxonomy';
  }

  if (isset($resources['entity:taxonomy_vocabulary'])) {
    $resources['entity:taxonomy_vocabulary']['uri_paths']['canonical'] = '/api/vocabulary/{taxonomy_vocabulary}';
  }
}

/**
 * Implements hook_media_insert().
 */
function os_rest_media_insert(MediaInterface $media) {
  /** @var \Drupal\vsite\Plugin\VsiteContextManagerInterface $vsiteContextManager */
  $vsiteContextManager = \Drupal::service('vsite.context_manager');
  if ($group = $vsiteContextManager->getActiveVsite()) {
    if (!($group->getContentByEntityId('group_entity:media', $media->id()))) {
      $group->addContent($media, 'group_entity:media');
    }
  }
}

/**
 * Implements hook_entity_delete().
 *
 * Logs all entities that are deleted so they can be returned
 * in restful update results.
 */
function os_rest_entity_delete(EntityInterface $entity) {
  /** @var \Drupal\os_rest\OsRestEntitiesDeletedInterface $entities_deleted */
  $entities_deleted = Drupal::service('os_rest.entities_deleted');
  $entities_deleted->insertEntity($entity);
}
