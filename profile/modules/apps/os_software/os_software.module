<?php

/**
 * @file
 * Software project customizations for Openscholar.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\node\NodeInterface;
use Drupal\views\Views;
use Drupal\Core\Url;

/**
 * Implements hook_form_alter().
 */
function os_software_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'node_software_project_form' || $form_id == 'node_software_project_edit_form') {
    $form['field_packaging']['widget'] = [
      '#markup' => '<div class="form-item form-type-textfield form-item-title"><label> ' . t("Packaging Method") . '<span class="form-required" title="This field is required."></span></lable><div class="no-bold">' . t("Manual upload") . '</div></div>',
      '#weight' => 1,
    ];
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function os_software_form_node_software_release_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _os_software_hide_node_title_form($form);
  Drupal::service('os.software.helper')->prePopulateSoftwareProjectField($form);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function os_software_form_node_software_release_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _os_software_hide_node_title_form($form);
}

/**
 * Hide title in form.
 */
function _os_software_hide_node_title_form(&$form) {
  $form['title']['#access'] = FALSE;
}

/**
 * Implements hook_node_presave().
 *
 * Generates the node title for Software Releases.
 */
function os_software_node_presave(NodeInterface $node) {
  if ($node->bundle() != 'software_release') {
    return;
  }

  /** @var \Drupal\os_software\OsSoftwareHelper $helper */
  $helper = Drupal::service('os.software.helper');

  // Unset others as recommended release if this is recommended.
  $field_recommended_version = $node->get('field_is_recommended_version')->getValue()[0]['value'];
  if ((bool) $field_recommended_version) {
    $project_id = $node->get('field_software_project')->getValue()[0]['target_id'];
    $helper->unsetRecommendedReleases($project_id);
  }

  // Sets the node title like "[project-node:title] [release-node:version]".
  $title = $helper->prepareReleaseTitle($node);
  $node->set('title', $title);
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function os_software_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($entity->bundle() != 'software_project') {
    return;
  }
  if ($build['#view_mode'] != 'full') {
    return;
  }
  foreach (['recommended_block', 'recent_block'] as $display_id) {
    _os_software_add_views_display_to_build($build, $display_id, $entity);
  }

  $options['query']['field_software_project'] = $entity->id();
  $url = Url::fromRoute('node.add', ['node_type' => 'software_release'], $options);
  $build['add_software_release_link'] = [
    '#title' => t('Add new software release'),
    '#attributes' => [
      'class' => ['add-software-release-link'],
    ],
    '#type' => 'link',
    '#url' => $url,
    '#weight' => -100,
  ];
}

/**
 * Add os_software_releases views block to build array.
 */
function _os_software_add_views_display_to_build(&$build, $display_id, $entity) {
  $view = Views::getView('os_software_releases');
  $args['nid'] = $entity->id();
  $view->setArguments($args);
  $view->setDisplay($display_id);
  $view->preExecute();
  $view->execute();
  if (empty($view->result)) {
    return;
  }

  $build['attached_' . $display_id]['title'] = [
    '#markup' => '<h2 class="release-block-title">' . $view->getTitle() . '</h2>',
  ];
  $build['attached_' . $display_id]['body'] = $view->buildRenderable($display_id, $view->args);
}

/**
 * Implements hook_media_view_alter().
 */
function os_software_media_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof NodeInterface && $node->bundle() == 'software_release') {
    $field_software_package_values = $node->get('field_software_package')->getValue();
    if ($field_software_package_values[0]['target_id'] == $entity->id()) {
      // Remove media contextual links on software release node page.
      unset($build['#contextual_links']['media']);
    }
  }
}
