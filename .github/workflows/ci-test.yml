# This is a basic workflow to help you get started with Actions

name: OpenScholar CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  Coding_Standards:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.3'
    - shell: bash
      name: Build Docker
      env:
        ARTIFACTS_KEY: ${{ secrets.ARTIFACTS_KEY }}
        ARTIFACTS_SECRET: ${{ secrets.ARTIFACTS_SECRET }}
        ARTIFACTS_ES_ENDPOINT: ${{ secrets.ARTIFACTS_ES_ENDPOINT }}
      run: |
        cp -f .travis/docker-compose.yml docker-compose.yml
        cp -f .travis/traefik.yml traefik.yml
        cp -f .travis/.env .env
        mkdir tests
        cp -f .travis/config/behat.yml tests/behat.yml
        echo AWS_ACCESS_KEY_ID=$ARTIFACTS_KEY >> .env
        echo AWS_SECRET_ACCESS_KEY=$ARTIFACTS_SECRET >> .env
        echo AWS_ES_ACCESS_ENDPOINT=$ARTIFACTS_ES_ENDPOINT >> .env
        docker-compose pull
        docker-compose up -d

    - name: Build Composer
      run: |
        docker-compose exec -T php composer global require hirak/prestissimo
        make
        docker-compose exec -T php cp .travis/config/phpunit.xml web/core/phpunit.xml
        docker-compose exec -T php cp .travis/config/bootstrap.php web/core/tests/bootstrap.php
        docker-compose exec -T php mkdir -p web/sites/simpletest
        
    - name: Coding Standards
      run: |
        docker-compose exec -T php ./vendor/bin/phpcs --config-set installed_paths vendor/drupal/coder/coder_sniffer
        docker-compose exec -T php ./vendor/bin/phpcs --standard=Drupal --warning-severity=0 --ignore=themes/*/css profile
        docker-compose exec -T php ./vendor/bin/phpcs --standard=DrupalPractice --warning-severity=0 --ignore=themes/*/css profile
  
  Module_Circular_Dependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.3'
    - shell: bash
      name: Build Docker
      env:
        ARTIFACTS_KEY: ${{ secrets.ARTIFACTS_KEY }}
        ARTIFACTS_SECRET: ${{ secrets.ARTIFACTS_SECRET }}
        ARTIFACTS_ES_ENDPOINT: ${{ secrets.ARTIFACTS_ES_ENDPOINT }}
      run: |
        cp -f .travis/docker-compose.yml docker-compose.yml
        cp -f .travis/traefik.yml traefik.yml
        cp -f .travis/.env .env
        mkdir tests
        cp -f .travis/config/behat.yml tests/behat.yml
        echo AWS_ACCESS_KEY_ID=$ARTIFACTS_KEY >> .env
        echo AWS_SECRET_ACCESS_KEY=$ARTIFACTS_SECRET >> .env
        echo AWS_ES_ACCESS_ENDPOINT=$ARTIFACTS_ES_ENDPOINT >> .env
        docker-compose pull
        docker-compose up -d

    - name: Build Composer
      run: |
        docker-compose exec -T php composer global require hirak/prestissimo
        make
        docker-compose exec -T php cp .travis/config/phpunit.xml web/core/phpunit.xml
        docker-compose exec -T php cp .travis/config/bootstrap.php web/core/tests/bootstrap.php
        docker-compose exec -T php mkdir -p web/sites/simpletest
        
    - name: Install Drupal
      run: |
        php --version
        docker-compose exec -T php cp .travis/config/default.settings.php web/sites/default/default.settings.php
        docker-compose exec -T php ./vendor/bin/drush site-install openscholar -vvv -y --db-url=mysql://drupal:drupal@mariadb/drupal --existing-config --account-pass=admin
        docker-compose exec -T php ./vendor/bin/drush cr
        
    - name: Check Circular
      run: docker-compose exec -T php ./vendor/bin/drush validate:module-dependencies
    
    - name: Install Test Configs
      run: |
        docker-compose exec -T php mkdir -p web/modules/test
        docker-compose exec -T php cp -r profile/modules/vsite/tests/modules/vsite_module_test web/modules/test
        docker-compose exec -T php cp -r web/modules/contrib/group/tests/modules/group_test_config web/modules/test
        docker-compose exec -T php cp -r profile/modules/custom/os_mailchimp/tests/modules/os_mailchimp_test web/modules/test
        docker-compose exec -T php cp -r profile/modules/apps/os_publications/tests/modules/os_publications_test web/modules/test
        docker-compose exec -T php cp -r profile/modules/cp/modules/cp_taxonomy/tests/modules/cp_taxonomy_test web/modules/test
        docker-compose exec -T php cp -r profile/modules/cp/modules/cp_appearance/tests/modules/cp_appearance_test web/modules/test
        docker-compose exec -T php cp -r profile/modules/cp/modules/cp_import/tests/modules/cp_import_csv_test web/modules/test
        docker-compose exec -T php cp -r profile/tests/modules/os_test web/modules/test
        docker-compose exec -T php ./vendor/bin/drush en -y vsite_module_test group_test_config os_mailchimp_test os_publications_test cp_taxonomy_test cp_appearance_test cp_import_csv_test os_test
   
  Run_Unit_Tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.3'
    - shell: bash
      name: Build Docker
      env:
        ARTIFACTS_KEY: ${{ secrets.ARTIFACTS_KEY }}
        ARTIFACTS_SECRET: ${{ secrets.ARTIFACTS_SECRET }}
        ARTIFACTS_ES_ENDPOINT: ${{ secrets.ARTIFACTS_ES_ENDPOINT }}
      run: |
        cp -f .travis/docker-compose.yml docker-compose.yml
        cp -f .travis/traefik.yml traefik.yml
        cp -f .travis/.env .env
        mkdir tests
        cp -f .travis/config/behat.yml tests/behat.yml
        echo AWS_ACCESS_KEY_ID=$ARTIFACTS_KEY >> .env
        echo AWS_SECRET_ACCESS_KEY=$ARTIFACTS_SECRET >> .env
        echo AWS_ES_ACCESS_ENDPOINT=$ARTIFACTS_ES_ENDPOINT >> .env
        docker-compose pull
        docker-compose up -d

    - name: Build Composer
      run: |
        docker-compose exec -T php composer global require hirak/prestissimo
        make
        docker-compose exec -T php cp .travis/config/phpunit.xml web/core/phpunit.xml
        docker-compose exec -T php cp .travis/config/bootstrap.php web/core/tests/bootstrap.php
        docker-compose exec -T php mkdir -p web/sites/simpletest
        
    - name: Unit Tests
      run: |
        docker-compose exec -T php ./vendor/bin/phpunit -c web/core --debug --group unit --exclude-group=kernel,functional,functional-javascript,wip --verbose web/profiles/contrib/openscholar
 
  Run_Tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        groups: ["widgets-1,widgets-2,widgets-3,widgets-4,widgets-5", "publications-1,publications-2,wysiwyg,vsite,os,os-theme-preview,vsite-preset,news", "cp-1,cp-2,other-1,other-2,cp-menu,profiles,redirect,cp-appearance,os-search","classes,events,pages,cp,media-browser,os-theme-preview,breadcrumbs,cp-menu,vsite_favicon","os-search,analytics,publications,cp-appearance,redirect,twitter,os,vsite,cp-import,vsite-preset","publications,mailchimp,metatag,redirect,cp-appearance,vsite-preset,news","os-search,cp,profiles,classes,pages","events,vsite,widgets","os,os-theme-preview,blog,faq,news,presentations,cp-menu"]
        include:
          - groups: "widgets-1,widgets-2,widgets-3,widgets-4,widgets-5"
            exclude: "unit,functional,functional-javascript,wip"
          - groups: "publications-1,publications-2,wysiwyg,vsite,os,os-theme-preview,vsite-preset,news"
            exclude: "unit,functional,functional-javascript,wip"
          - groups: "cp-1,cp-2,other-1,other-2,cp-menu,profiles,redirect,cp-appearance,os-search"
            exclude: "unit,functional,functional-javascript,wip"
          - groups: "classes,events,pages,cp,media-browser,os-theme-preview,breadcrumbs,cp-menu,vsite_favicon"
            exclude: "unit,kernel,functional-javascript,wip"
          - groups: "os-search,analytics,publications,cp-appearance,redirect,twitter,os,vsite,cp-import,vsite-preset"
            exclude: "unit,kernel,functional-javascript,wip"
          - groups: "publications,mailchimp,metatag,redirect,cp-appearance,vsite-preset,news"
            exclude: "unit,kernel,functional,wip"
          - groups: "os-search,cp,profiles,classes,pages"
            exclude: "unit,kernel,functional,wip"
          - groups: "events,vsite,widgets"
            exclude: "unit,kernel,functional,wip"
          - groups: "os,os-theme-preview,blog,faq,news,presentations,cp-menu"
            exclude: "unit,kernel,functional,wip"
    steps:
    - uses: actions/checkout@v2
    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.3'
    - shell: bash
      name: Build Docker
      env:
        ARTIFACTS_KEY: ${{ secrets.ARTIFACTS_KEY }}
        ARTIFACTS_SECRET: ${{ secrets.ARTIFACTS_SECRET }}
        ARTIFACTS_ES_ENDPOINT: ${{ secrets.ARTIFACTS_ES_ENDPOINT }}
      run: |
        cp -f .travis/docker-compose.yml docker-compose.yml
        cp -f .travis/traefik.yml traefik.yml
        cp -f .travis/.env .env
        mkdir tests
        cp -f .travis/config/behat.yml tests/behat.yml
        echo AWS_ACCESS_KEY_ID=$ARTIFACTS_KEY >> .env
        echo AWS_SECRET_ACCESS_KEY=$ARTIFACTS_SECRET >> .env
        echo AWS_ES_ACCESS_ENDPOINT=$ARTIFACTS_ES_ENDPOINT >> .env
        docker-compose pull
        docker-compose up -d

    - name: Build Composer
      run: |
        docker-compose exec -T php composer global require hirak/prestissimo
        make
        docker-compose exec -T php cp .travis/config/phpunit.xml web/core/phpunit.xml
        docker-compose exec -T php cp .travis/config/bootstrap.php web/core/tests/bootstrap.php
        docker-compose exec -T php mkdir -p web/sites/simpletest
       
    - name: Install Drupal
      run: |
        docker-compose exec -T php cp .travis/config/default.settings.php web/sites/default/default.settings.php
        docker-compose exec -T php ./vendor/bin/drush site-install openscholar -vvv -y --db-url=mysql://drupal:drupal@mariadb/drupal --existing-config --account-pass=admin
        docker-compose exec -T php ./vendor/bin/drush cr
    
    - name: Install Test Configs
      run: |
        docker-compose exec -T php mkdir -p web/modules/test
        docker-compose exec -T php cp -r profile/modules/vsite/tests/modules/vsite_module_test web/modules/test
        docker-compose exec -T php cp -r web/modules/contrib/group/tests/modules/group_test_config web/modules/test
        docker-compose exec -T php cp -r profile/modules/custom/os_mailchimp/tests/modules/os_mailchimp_test web/modules/test
        docker-compose exec -T php cp -r profile/modules/apps/os_publications/tests/modules/os_publications_test web/modules/test
        docker-compose exec -T php cp -r profile/modules/cp/modules/cp_taxonomy/tests/modules/cp_taxonomy_test web/modules/test
        docker-compose exec -T php cp -r profile/modules/cp/modules/cp_appearance/tests/modules/cp_appearance_test web/modules/test
        docker-compose exec -T php cp -r profile/modules/cp/modules/cp_import/tests/modules/cp_import_csv_test web/modules/test
        docker-compose exec -T php cp -r profile/tests/modules/os_test web/modules/test
        docker-compose exec -T php ./vendor/bin/drush en -y vsite_module_test group_test_config os_mailchimp_test os_publications_test cp_taxonomy_test cp_appearance_test cp_import_csv_test os_test
   
    - name: Tests
      run: |
        docker-compose exec -T php ./vendor/bin/phpunit -c web/core --debug --group ${{ matrix.groups }} --exclude-group=${{ matrix.exclude }} --verbose web/profiles/contrib/openscholar
